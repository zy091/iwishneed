import { supabase } from '@/lib/supabaseClient'

/**
 * Ê∏ÖÁ©∫Êï∞ÊçÆÂ∫ì‰∏≠ÁöÑÊâÄÊúâÈúÄÊ±ÇÊï∞ÊçÆ
 * Ê≥®ÊÑèÔºöËøô‰∏™Êìç‰Ωú‰∏çÂèØÈÄÜÔºåËØ∑Ë∞®ÊÖé‰ΩøÁî®
 */
export async function clearAllRequirements() {
  try {
    console.log('ÂºÄÂßãÊ∏ÖÁ©∫Êï∞ÊçÆÂ∫ì...')
    
    // Ê∏ÖÁ©∫ÊäÄÊúØÈúÄÊ±ÇË°®
    const { error: techError } = await supabase
      .from('tech_requirements')
      .delete()
      .neq('id', '00000000-0000-0000-0000-000000000000') // Âà†Èô§ÊâÄÊúâËÆ∞ÂΩï
    
    if (techError) {
      console.error('Ê∏ÖÁ©∫ÊäÄÊúØÈúÄÊ±ÇË°®Â§±Ë¥•:', techError)
      throw techError
    }
    
    console.log('‚úÖ ÊäÄÊúØÈúÄÊ±ÇË°®Â∑≤Ê∏ÖÁ©∫')
    
    // Ê∏ÖÁ©∫ÂàõÊÑèÈúÄÊ±ÇË°®
    const { error: creativeError } = await supabase
      .from('requirements')
      .delete()
      .neq('id', '00000000-0000-0000-0000-000000000000') // Âà†Èô§ÊâÄÊúâËÆ∞ÂΩï
    
    if (creativeError) {
      console.error('Ê∏ÖÁ©∫ÂàõÊÑèÈúÄÊ±ÇË°®Â§±Ë¥•:', creativeError)
      throw creativeError
    }
    
    console.log('‚úÖ ÂàõÊÑèÈúÄÊ±ÇË°®Â∑≤Ê∏ÖÁ©∫')
    
    // Ê∏ÖÁ©∫Áî®Êà∑Ê¥ªÂä®ËÆ∞ÂΩïË°®ÔºàÂ¶ÇÊûúÂ≠òÂú®Ôºâ
    const { error: activityError } = await supabase
      .from('user_activities')
      .delete()
      .neq('id', '00000000-0000-0000-0000-000000000000') // Âà†Èô§ÊâÄÊúâËÆ∞ÂΩï
    
    if (activityError && activityError.code !== 'PGRST116') { // PGRST116 Ë°®Á§∫Ë°®‰∏çÂ≠òÂú®ÔºåÂèØ‰ª•ÂøΩÁï•
      console.error('Ê∏ÖÁ©∫Áî®Êà∑Ê¥ªÂä®Ë°®Â§±Ë¥•:', activityError)
      throw activityError
    }
    
    console.log('‚úÖ Áî®Êà∑Ê¥ªÂä®Ë°®Â∑≤Ê∏ÖÁ©∫')
    
    console.log('üéâ Êï∞ÊçÆÂ∫ìÊ∏ÖÁ©∫ÂÆåÊàêÔºÅ')
    
    return {
      success: true,
      message: 'Êï∞ÊçÆÂ∫ìÂ∑≤ÊàêÂäüÊ∏ÖÁ©∫'
    }
    
  } catch (error) {
    console.error('Ê∏ÖÁ©∫Êï∞ÊçÆÂ∫ìÂ§±Ë¥•:', error)
    return {
      success: false,
      message: `Ê∏ÖÁ©∫Â§±Ë¥•: ${error instanceof Error ? error.message : 'Êú™Áü•ÈîôËØØ'}`
    }
  }
}

/**
 * Ëé∑ÂèñÂΩìÂâçÊï∞ÊçÆÂ∫ìÁªüËÆ°‰ø°ÊÅØ
 */
export async function getDatabaseStats() {
  try {
    // Ëé∑ÂèñÊäÄÊúØÈúÄÊ±ÇÊï∞Èáè
    const { count: techCount, error: techError } = await supabase
      .from('tech_requirements')
      .select('*', { count: 'exact', head: true })
    
    if (techError) {
      console.error('Ëé∑ÂèñÊäÄÊúØÈúÄÊ±ÇÁªüËÆ°Â§±Ë¥•:', techError)
    }
    
    // Ëé∑ÂèñÂàõÊÑèÈúÄÊ±ÇÊï∞Èáè
    const { count: creativeCount, error: creativeError } = await supabase
      .from('requirements')
      .select('*', { count: 'exact', head: true })
    
    if (creativeError) {
      console.error('Ëé∑ÂèñÂàõÊÑèÈúÄÊ±ÇÁªüËÆ°Â§±Ë¥•:', creativeError)
    }
    
    // Ëé∑ÂèñÁî®Êà∑Ê¥ªÂä®Êï∞Èáè
    const { count: activityCount, error: activityError } = await supabase
      .from('user_activities')
      .select('*', { count: 'exact', head: true })
    
    if (activityError && activityError.code !== 'PGRST116') {
      console.error('Ëé∑ÂèñÁî®Êà∑Ê¥ªÂä®ÁªüËÆ°Â§±Ë¥•:', activityError)
    }
    
    return {
      techRequirements: techCount || 0,
      creativeRequirements: creativeCount || 0,
      userActivities: activityCount || 0,
      total: (techCount || 0) + (creativeCount || 0)
    }
    
  } catch (error) {
    console.error('Ëé∑ÂèñÊï∞ÊçÆÂ∫ìÁªüËÆ°Â§±Ë¥•:', error)
    return {
      techRequirements: 0,
      creativeRequirements: 0,
      userActivities: 0,
      total: 0
    }
  }
}

// Â¶ÇÊûúÁõ¥Êé•ËøêË°åÊ≠§ËÑöÊú¨
if (typeof window === 'undefined') {
  // Node.js ÁéØÂ¢É
  const readline = require('readline')
  
  const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
  })
  
  async function main() {
    console.log('üö® Ë≠¶ÂëäÔºöÊ≠§Êìç‰ΩúÂ∞ÜÊ∏ÖÁ©∫Êï∞ÊçÆÂ∫ì‰∏≠ÁöÑÊâÄÊúâÈúÄÊ±ÇÊï∞ÊçÆÔºÅ')
    console.log('Ëøô‰∏™Êìç‰Ωú‰∏çÂèØÈÄÜÔºåËØ∑Á°Æ‰øù‰Ω†ÁúüÁöÑË¶ÅÊâßË°åÊ≠§Êìç‰Ωú„ÄÇ')
    
    // ÂÖàÊòæÁ§∫ÂΩìÂâçÁªüËÆ°
    const stats = await getDatabaseStats()
    console.log('\nÂΩìÂâçÊï∞ÊçÆÂ∫ìÁªüËÆ°:')
    console.log(`- ÊäÄÊúØÈúÄÊ±Ç: ${stats.techRequirements} Êù°`)
    console.log(`- ÂàõÊÑèÈúÄÊ±Ç: ${stats.creativeRequirements} Êù°`)
    console.log(`- Áî®Êà∑Ê¥ªÂä®: ${stats.userActivities} Êù°`)
    console.log(`- ÊÄªËÆ°: ${stats.total} Êù°ÈúÄÊ±Ç\n`)
    
    rl.question('ËØ∑ËæìÂÖ• "CONFIRM" Êù•Á°ÆËÆ§Ê∏ÖÁ©∫Êìç‰Ωú: ', async (answer) => {
      if (answer === 'CONFIRM') {
        const result = await clearAllRequirements()
        console.log(result.message)
      } else {
        console.log('Êìç‰ΩúÂ∑≤ÂèñÊ∂à')
      }
      rl.close()
    })
  }
  
  main().catch(console.error)
}